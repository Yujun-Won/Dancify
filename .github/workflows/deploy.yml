name: Deploy to EC2

on:
  push:
    branches:
      - develop

jobs:
  frontend-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: SSH into EC2 instance
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_FRONTEND_PUBLIC_IP}}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script_stop: true
          script: |
            cd dancify
            git pull
            sudo docker-compose stop
            sudo docker-compose -f docker-compose-front.yml down
            sudo docker system prune -af --volumes
            sudo docker-compose -f docker-compose-front.yml up

  backend-deploy:
    runs-on: ubuntu-latest

    steps:
        - name: Checkout repository
          uses: actions/checkout@v3

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v2
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ap-northeast-2

        - name: SSH into EC2 instance
          uses: appleboy/ssh-action@master
          with:
            host: ${{ secrets.EC2_BACKEND_PUBLIC_IP }}
            username: ec2-user
            key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
            script_stop: true
            script: |
              cd dancify
              git pull
              sudo docker-compose stop
              sudo docker-compose -f docker-compose-back.yml down
              sudo docker system prune -af --volumes
              sudo rm -rf ./mysqldb/db
              sudo docker-compose -f docker-compose-back.yml up
