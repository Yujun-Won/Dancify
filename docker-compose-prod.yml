version: "3.3"

services:
  django:
    container_name: django
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/usr/src/django
    command: >
      sh -c "python manage.py makemigrations &&
            python manage.py migrate &&
            python manage.py flush --no-input &&
            python manage.py seed_users &&
            python manage.py seed_posts &&
            python manage.py seed_comments &&
            python manage.py seed_like &&
            python manage.py seed_view_history &&
            python manage.py runserver 0.0.0.0:8000"
    environment:
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DJANGO_TIME_ZONE: ${DJANGO_TIME_ZONE}
      DJANGO_LANGUAGE_CODE: ${DJANGO_LANGUAGE_CODE}
      DJANGO_NEXTJS_URL: ${DJANGO_NEXTJS_URL}
      DJANGO_S3_ACCESS_KEY_ID: ${DJANGO_S3_ACCESS_KEY_ID}
      DJANGO_S3_SECRET_ACCESS_KEY: ${DJANGO_S3_SECRET_ACCESS_KEY}
      TZ: "Asia/Seoul"
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_ROOT_HOST: ${MYSQL_HOST}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    restart: always
    ports:
      - "8000:8000"
    networks:
      - server-network
    depends_on:
      - mysqldb

  mysqldb:
    container_name: mysqldb
    image: mysql
    restart: always
    command: mysqld --character-set-server=utf8 --collation-server=utf8_general_ci --default-authentication-plugin=mysql_native_password
    volumes:
      - ./mysqldb/db:/var/lib/mysql
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      TZ: "Asia/Seoul"
    networks:
      - server-network

  nextjs:
    container_name: nextjs
    restart: "always"
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_ENV_API_DOMAIN: ${NEXT_PUBLIC_ENV_API_DOMAIN}
        NEXT_PUBLIC_ENV_API_URL: ${NEXT_PUBLIC_ENV_API_URL}
        NEXT_PUBLIC_ENV_DOMAIN: ${NEXT_PUBLIC_ENV_DOMAIN}
    environment:
      TZ: "Asia/Seoul"
    networks:
      - server-network

  nginx:
    container_name: nginx
    restart: "always"
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      # certbot
      - /etc/letsencrypt:/etc/letsencrypt
      # letsencrypt
      - /var/lib/letsencrypt:/var/lib/letsencrypt
      - ./nginx/sites.conf:/etc/nginx/conf.d/sites.conf
      - ./nginx/sites-enabled:/etc/nginx/sites-enabled
    environment:
      NGINX_HOST: ${NGINX_HOST}
      NGINX_PORT: ${NGINX_PORT}
      NGINX_SERVER_NAME: ${NGINX_SERVER_NAME}
      NGINX_SSL_CERTIFICATE: ${NGINX_SSL_CERTIFICATE}
      NGINX_SSL_CERTIFICATE_KEY: ${NGINX_SSL_CERTIFICATE_KEY}
      NGINX_SSL_TRUSTED_CERTIFICATE: ${NGINX_SSL_TRUSTED_CERTIFICATE}
      TZ: "Asia/Seoul"
    depends_on:
      - nextjs
      - django
      - mysqldb
    networks:
      - server-network

networks:
  server-network:
    driver: bridge
# certbot docker container
# docker run -it --rm --name certbot \
#             -v "/etc/letsencrypt:/etc/letsencrypt" \
#             -v "/var/lib/letsencrypt:/var/lib/letsencrypt" \
#             certbot/certbot \
#             certonly \
#             --webroot \
#             -w /var/lib/letsencrypt \
#             -d www.seniorplus.site \
#             --agree-tos
